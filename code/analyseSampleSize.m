% test the model with a grid search

clear all;

path = fileparts( which('code/analyseSampleSize.m') );
path = [path '/../results/'];

catchErrors = true;

setup.data = struct();

setup.model.class = @JumpModel;
setup.model.args.ContinuousEncodingArgs.AlignmentMethod = 'LMTakeoffPeak';
setup.model.args.ContinuousEncodingArgs.NumComponents = 18;
setup.model.args.CompressModel = true;
setup.model.args.Optimize = true;

setup.eval.CVType = 'KFold';
setup.eval.KFolds = 2;
setup.eval.KFoldRepeats = 10; % 10
setup.eval.RandomSeed = 1234;
setup.eval.InParallel = false;
setup.eval.DiscardDatasets = true;

parameters = [ "model.args.EncodingType", ...
               "data.args.CappedObs", ...
               "data.class", ...
               "model.args.ModelType", ...
               "data.args.Instance" ];
cappedObs = floor(logspace(1.61, 2.54, 20));
values = {{'Discrete', 'Continuous', 'Combined'}, ...
          cappedObs, ...
          {@SmartphoneDataset, @AccelerometerDataset}, ....
          {'Linear', 'Lasso', 'SVM', 'XGBoost'}, ...
          1:5}; % 1:10

myInvestigation = ParallelInvestigation( 'SampleSize2', path, parameters, values, setup, catchErrors );

myInvestigation.run;
myInvestigation.aggregateResults(5);
report = myInvestigation.saveReport;

%% plot RMSE as a function of the number of predictors

figTrn = plotModelPerformance( report, ...
                              'Sample Size', ...
                              'StdRMSE', 'Standardised RMSE', ...
                              Set = 'Training', ...
                              Percentiles = true, ...
                              XLimits = [40 500], ...
                              XTickInterval = 100, ...
                              YLimits = [0.01 2], ...
                              YTickInterval = 0.5, ...
                              XLogScale = true, ...
                              YLogScale = true, ...
                              FitType = 'gpr', ...
                              GPBasisFunction = 'none', ...
                              GPKernelFunction = 'matern52');

figVal = plotModelPerformance( report, ...
                              'Sample Size', ...
                              'StdRMSE', 'Standardised RMSE', ...
                              Set = 'Validation', ...
                              Percentiles = true, ...
                              XLimits = [40 500], ...
                              XTickInterval = 100, ...
                              YLimits = [0.4 3], ...
                              YTickInterval = 0.5, ...
                              XLogScale = true, ...
                              YLogScale = true, ...
                              FitType = 'gpr', ...
                              GPBasisFunction = 'none', ...
                              GPKernelFunction = 'matern52' );

saveGraphicsObject( figTrn, path, 'SampleTraining' );
saveGraphicsObject( figVal, path, 'SampleValidation' );